@model IEnumerable<EduMax.Models.Course>
@using EduMax.Models;
@using EduMax.Repository;
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";

    //Setting "0" to favSig. This is used as a signal for the user Favorite course for a particular course.
    string favSig = "0";
}

<!DOCTYPE HTML>
<html>
<head>
    <style>
        .limit-text {
            overflow: hidden;
            -webkit-flex-line-pack: justify;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 3; /* number of lines to show */
            -webkit-box-orient: vertical;
        }

        .hover-icon:hover {
            box-shadow: 0 0 11px rgb(0, 255, 144);
        }
    </style>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
</head>
<body>
    <!-- page title -->
    <section class="page-title-section overlay">
        <div class="container bg-image">
            <div class="row">
                <div class="col-md-8">
                    <ul class="list-inline custom-breadcrumb">
                        <li class="list-inline-item"><a class="h2 text-primary font-secondary" href="courses.html">Our Courses</a></li>
                        <li class="list-inline-item text-white h3 font-secondary "></li>
                    </ul>
                    <p class="text-lighten">Our courses offer a good compromise between the continuous assessment favoured by some universities and the emphasis placed on final exams by others.</p>
                </div>
            </div>
        </div>
    </section>
    <!-- /page title -->
    <!-- courses -->
    <section class="section">
        <div class="container">
            <!-- course list -->
            <div class="row justify-content-lg-start">
                <!-- course item -->
                @foreach (var item in Model)
                {
                    if (item.Status == "1")
                    {
                        <div class="col-lg-4 col-sm-6 mb-5">
                            <a id="@item.CourseId" href="/Course/CourseLectureList/@item.CourseId" @*onclick="CourseLec(@item.CourseId)"*@>
                                <div class="card p-0 border-primary rounded-0 hover-shadow">
                                    @if (item.CoursePhoto != null)
                                    {
                                        <img class="card-img-top rounded-0" src="@Url.Content(item.CoursePhoto)" alt="course thumb" height="285" />
                                    }
                                    else
                                    {
                                        <img class="card-img-top rounded-0" src="~/asset/images/teacher.jpg" alt="course thumb" height="285" />
                                    }
                                <div class="card-body">
                                    <ul class="list-inline mb-2">
                                        <li class="list-inline-item"><i class="ti-calendar mr-1 text-color"></i>@item.Date.Day-@item.Date.Month-@item.Date.Year</li>
                                        <li class="list-inline-item"><object><a class="text-color" href="#">@item.Category.CategoryName</a></object></li>
                                    </ul>
                                    <div>
                                        <div align="left">
                                            <i class="ti-money"><u><strong>@item.Price</strong></u></i>
                                        </div>

                                        @* We have to set the course favorite icon. If the particular course is in user Favorite list then the icon will have
                                           a colured heart-shape icon else the icon will be a colorless heart-shape icon *@
                                        <div align="right">
                                            @foreach (var userFavoriteCourse in item.UserFavoriteCourses)
                                            {
                                                @* We have to check every data from the UserFavoriteCourses whether the particular course is a Favorite for
                                                   the particular user or not. *@

                                                if (userFavoriteCourse.UserId == (int)Session["credential_id"] && userFavoriteCourse.CourseId == item.CourseId)
                                                {
                                                    @* If the particular course is a Favorite for the user then the favSig will be "1" meaning the
                                                       course is user Favorite; and then we have to break the loop. *@
                                                    favSig = "1";
                                                    break;
                                                }
                                                
                                                @* If the particular course is a Favorite for the user then the favSig will be "0" meaning the
                                                       course is user not Favorite. The loop still continues to iterate. *@
                                                favSig = "0";
                                            }

                                            @* After compeleting/breaking the loop it is now checked whether the favSig is "1" or "0" *@
                                            @if (favSig == "0")
                                            {
                                                <object>
                                                    <i id="@("userFavCourse"+item.CourseId)" onclick="favorite(@item.CourseId)" style="color: rebeccapurple;" class="ti-heart hover-icon"></i>
                                                </object>
                                            }
                                            else if (favSig == "1")
                                            {
                                                <object>
                                                    <i id="@("userFavCourse"+item.CourseId)" onclick="favorite(@item.CourseId)" style="color: rebeccapurple;" class="fas fa-heart hover-icon"></i>
                                                </object>
                                                favSig = "0";
                                            }
                                        </div>                                      
                                    </div>
                                    
                                    <object>
                                        <a href="/Course/CourseLectureList/@item.CourseId">
                                            <h4 class="card-title">@item.CourseName</h4>
                                        </a>
                                    </object>
                                    @*<p class="card-text mb-4">
                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
                                        incididunt ut labore et dolore magna.
                                    </p>*@

                                    @*In the list of courses, admin will not be given the interface for button*@
                                    @if (Session["user_type"].ToString() != "Admin")
                                    {
                                        @*The follwing variable is used as a signal, meaning if the particual coruse in the course list
                                            is added in the cart or not. If it is added in the cart, then the signal is "1", else "0"*@
                                        string sig = "0";

                                        @*Assigning the Shopping Cart Session to List of Courses*@
                                        List<Course> courses = (List<Course>)Session["shoppingCart"];

                                        @*Getting all the data from StudentCourse table*@
                                        List<StudentCourse> studentCourses = new StudentCourseRepository().GetAll();
                                                
                                        @*It will be checked if course id from Course table matches with course id from StudentCourse
                                            table, and the logged-in user credential id matches with UserStudentId from StudentCourse table. 
                                            If this matches, this means the user has the particular course as his learnings*@
                                        foreach(StudentCourse list in studentCourses){
                                            if(list.CourseId == item.CourseId && (int)Session["credential_id"] == list.UserStudentId){
                                                <object><a href="/Lecture/UserLearningCourseLectures/@item.CourseId" class="btn btn-primary btn-sm">Go to Course</a></object>
                                                sig = "-1";
                                                @*So after matching, the signal will be assigned to "-1" meaning the particular course
                                                    is a learning for the user*@
                                                break;
                                            }
                                        }
                                        if(sig != "-1") {
                                            
                                        @*If the user who is logged in matches the credential id with the course User id (that means creator of the course), 
                                            then this means that course belongs to the user. So the following line will be executed*@
                                            if (Convert.ToInt32(Session["credential_id"]) == item.UserId)
                                            {
                                                <object>
                                                    <a href="/Lecture/UserLearningCourseLectures/@item.CourseId" class="btn btn-primary btn-sm">Your Created Course!</a>
                                                </object>
                                            }
                                            @*If the list of courses is null, this means the shopping cart session is assigned to list of courses,
                                                and if the shopping cart is null then this means the list of courses is null. Therefore user will be given
                                                the option to add the course into the cart*@
                                            else if (courses == null)
                                            {
                                                <object><a href="/ShoppingCart/AddToShoppingCart/@item.CourseId" class="btn btn-primary btn-sm">Add to Cart</a></object>
                                            }                                                                               
                                            else
                                            {
                                            @*Since there can be a situation where after emptying the cart after removing all courses from cart, still
                                                the shopping cart session exists. Therefore we have to check if the Count valie is greater than zero.
                                                If it is greater than zero, which means there is atleast one course exist in the shopping cart, then 
                                                the following line executes*@
                                                if (courses.Count > 0)
                                                {                                                
                                                    foreach (Course course in courses)
                                                    {
                                                        @*For each course we will check if the course exist in the cart matches the 
                                                            course id in the course list. If matches, this means the course is in the 
                                                            shopping cart, then there a button "Go to cart" button will be shown which 
                                                            takes user to the cart page and the breaks after assigning Signal to 1*@
                                                        if (item.CourseId == course.CourseId)
                                                        {
                                                            <object><a href="/ShoppingCart/Index" class="btn btn-primary btn-sm">Go to Cart</a></object>
                                                            @*The sig = "1" means that this particular product is added to cart*@
                                                            sig = "1";
                                                            break;
                                                        }                                                    
                                                    }
                                                }
                                                @*The following line executes if the particular course is not added to shopping cart*@
                                                if (sig == "0")
                                                {
                                                    <object><a href="/ShoppingCart/AddToShoppingCart/@item.CourseId" class="btn btn-primary btn-sm">Add to Cart</a></object>
                                                }
                                            } 
                                        }
                                    }
                                </div>
                                </div>
                            </a>
                        </div>

                    }
                }
            </div>
        </div>
    </section>
    <!-- /courses -->
</body>
</html>

<script type="text/javascript">    

    function favorite(id) {
        var v = document.getElementById(id).value;
        if ($("#ic" + id).click(function (event) {
            event.preventDefault();
            //alert("hello 23");
        }));

        $.ajax({
            url: "/Course/UserFavoriteCourse/" + id,
            method: "Get",
            dataType: "json",
            async: false,

            success: function (data) {                
                //alert("Success");
                @*$("#" + id).attr("href");*@
                //$("#" + id).removeAttr("href");
                //return void

                /*If data value is "1" then this means the particular course for the particular user is added as Favorite*/
                if (data == "1") {
                    //So, the class will be added and another class will be removed using the help if JQuery.
                    $("#userFavCourse" + id).addClass("fas fa-heart");
                    $("#userFavCourse" + id).removeClass("ti-heart");
                    //alert("Added");
                    
                }
                /*Else if data value is "0" then this means the particular course for the particular user is removed from Favorite*/
                else {
                    //So, the class will be added and another class will be removed using the help if JQuery.
                    $("#userFavCourse" + id).removeClass("fas fa-heart");
                    $("#userFavCourse" + id).addClass("ti-heart");
                    //alert("Removed");
                    
                }
                //alert("success");

                //The following line is required. This is because, the favorite icon is inside a a-tag (link). If user clicks on the
                //Favorite icon, the program will run successfully but it will the redirect to another page which is a work done by that a-tag.
                //So to stop this, the follwong line is required to stop from redirection.
                event.preventDefault();
                //console.log(data);
            },
            //If any error occurs after the request, then the following line executes.
            error: function (data) {
                alert("error");
                //alert(data);
            }
        })
    }
</script>
