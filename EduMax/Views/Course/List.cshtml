@model IEnumerable<EduMax.Models.Course>
@using EduMax.Models;
@using EduMax.Repository;
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<!DOCTYPE HTML>
<html>
<head>
    <style>
        .limit-text {
            overflow: hidden;
            -webkit-flex-line-pack: justify;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 3; /* number of lines to show */
            -webkit-box-orient: vertical;
        }

        .hover-icon:hover {
            box-shadow: 0 0 11px rgb(0, 255, 144);
        }
    </style>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
</head>
<body>
    <!-- page title -->
    <section class="page-title-section overlay">
        <div class="container bg-image">
            <div class="row">
                <div class="col-md-8">
                    <ul class="list-inline custom-breadcrumb">
                        <li class="list-inline-item"><a class="h2 text-primary font-secondary" href="courses.html">Our Courses</a></li>
                        <li class="list-inline-item text-white h3 font-secondary "></li>
                    </ul>
                    <p class="text-lighten">Our courses offer a good compromise between the continuous assessment favoured by some universities and the emphasis placed on final exams by others.</p>
                </div>
            </div>
        </div>
    </section>
    <!-- /page title -->
    <!-- courses -->
    <section class="section">
        <div class="container">
            <!-- course list -->
            <div class="row justify-content-lg-start">
                <!-- course item -->
                @foreach (var item in Model)
                {
                    if (item.Status == "1")
                    {
                        <div class="col-lg-4 col-sm-6 mb-5">
                            <a href="/Course/CourseLectureList/@item.CourseId">
                                <div class="card p-0 border-primary rounded-0 hover-shadow">
                                    @if (item.CoursePhoto != null)
                                    {
                                        <img class="card-img-top rounded-0" src="@Url.Content(item.CoursePhoto)" alt="course thumb" height="285" />
                                    }
                                    else
                                    {
                                        <img class="card-img-top rounded-0" src="~/asset/images/teacher.jpg" alt="course thumb" height="285" />
                                    }
                                <div class="card-body">
                                    <ul class="list-inline mb-2">
                                        <li class="list-inline-item"><i class="ti-calendar mr-1 text-color"></i>@item.Date.Day-@item.Date.Month-@item.Date.Year</li>
                                        <li class="list-inline-item"><object><a class="text-color" href="#">@item.Category.CategoryName</a></object></li>
                                    </ul>
                                    <div>
                                        <div align="left">
                                            <i class="ti-money"><u><strong>@item.Price</strong></u></i>
                                        </div>
                                        <div align="right">
                                            @*<object><a onclick="favorite(@item.CourseId)">*@
                                            <object>
                                            <i id="@item.CourseId" onclick="favorite(@item.CourseId)" style="color: rebeccapurple;" class="ti-heart hover-icon"></i>
                                            </object>
                                            @*<i id="@item.CourseId" onclick="favorite(@item.CourseId)" style="color: rebeccapurple;" class="fas fa-heart hover-icon"></i>*@
                                            @*</a></object>*@
                                        </div>                                      
                                    </div>
                                    @*<div align="right">
                                        <object>
                                            <a href="#"><i class="ti-heart ti-heart"></i></a>
                                        </object>
                                    </div>*@
                                    
                                    <object>
                                        <a href="/Course/CourseLectureList/@item.CourseId">
                                            <h4 class="card-title">@item.CourseName</h4>
                                        </a>
                                    </object>
                                    @*<p class="card-text mb-4">
                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor
                                        incididunt ut labore et dolore magna.
                                    </p>*@

                                    @*In the list of courses, admin will not be given the interface for button*@
                                    @if (Session["user_type"].ToString() != "Admin")
                                    {
                                        @*The follwing variable is used as a signal, meaning if the particual coruse in the course list
                                            is added in the cart or not. If it is added in the cart, then the signal is "1", else "0"*@
                                        string sig = "0";

                                        @*Assigning the Shopping Cart Session to List of Courses*@
                                        List<Course> courses = (List<Course>)Session["shoppingCart"];

                                        @*Getting all the data from StudentCourse table*@
                                        List<StudentCourse> studentCourses = new StudentCourseRepository().GetAll();
                                                
                                        @*It will be checked if course id from Course table matches with course id from StudentCourse
                                            table, and the logged-in user credential id matches with UserStudentId from StudentCourse table. 
                                            If this matches, this means the user has the particular course as his learnings*@
                                        foreach(StudentCourse list in studentCourses){
                                            if(list.CourseId == item.CourseId && (int)Session["credential_id"] == list.UserStudentId){
                                                <object><a href="/Lecture/UserLearningCourseLectures/@item.CourseId" class="btn btn-primary btn-sm">Go to Course</a></object>
                                                sig = "-1";
                                                @*So after matching, the signal will be assigned to "-1" meaning the particular course
                                                    is a learning for the user*@
                                                break;
                                            }
                                        }
                                        if(sig != "-1") {
                                            
                                        @*If the user who is logged in matches the credential id with the course User id (that means creator of the course), 
                                            then this means that course belongs to the user. So the following line will be executed*@
                                            if (Convert.ToInt32(Session["credential_id"]) == item.UserId)
                                            {
                                                <object>
                                                    <a href="/Lecture/UserLearningCourseLectures/@item.CourseId" class="btn btn-primary btn-sm">Your Created Course!</a>
                                                </object>
                                            }
                                            @*If the list of courses is null, this means the shopping cart session is assigned to list of courses,
                                                and if the shopping cart is null then this means the list of courses is null. Therefore user will be given
                                                the option to add the course into the cart*@
                                            else if (courses == null)
                                            {
                                                <object><a href="/ShoppingCart/AddToShoppingCart/@item.CourseId" class="btn btn-primary btn-sm">Add to Cart</a></object>
                                            }                                                                               
                                            else
                                            {
                                            @*Since there can be a situation where after emptying the cart after removing all courses from cart, still
                                                the shopping cart session exists. Therefore we have to check if the Count valie is greater than zero.
                                                If it is greater than zero, which means there is atleast one course exist in the shopping cart, then 
                                                the following line executes*@
                                                if (courses.Count > 0)
                                                {                                                
                                                    foreach (Course course in courses)
                                                    {
                                                        @*For each course we will check if the course exist in the cart matches the 
                                                            course id in the course list. If matches, this means the course is in the 
                                                            shopping cart, then there a button "Go to cart" button will be shown which 
                                                            takes user to the cart page and the breaks after assigning Signal to 1*@
                                                        if (item.CourseId == course.CourseId)
                                                        {
                                                            <object><a href="/ShoppingCart/Index" class="btn btn-primary btn-sm">Go to Cart</a></object>
                                                            @*The sig = "1" means that this particular product is added to cart*@
                                                            sig = "1";
                                                            break;
                                                        }                                                    
                                                    }
                                                }
                                                @*The following line executes if the particular course is not added to shopping cart*@
                                                if (sig == "0")
                                                {
                                                    <object><a href="/ShoppingCart/AddToShoppingCart/@item.CourseId" class="btn btn-primary btn-sm">Add to Cart</a></object>
                                                }
                                            } 
                                        }
                                    }
                                </div>
                                </div>
                            </a>
                        </div>

                    }
                }
            </div>
        </div>
    </section>
    <!-- /courses -->
</body>
</html>

<script type="text/javascript">
    function favorite(id) {
        var v = document.getElementById(id).value;        
        alert("hello: " + id);
        alert(v);
        $("#" + id).removeClass("ti-heart");
        $("#" + id).addClass("fas fa-heart");
        $.ajax({
            url: "/Course/UserFavoriteCourse/" + id,
            method: "Get",
            dataType: "json",

            success: function (data) {
                alert("success");
                console.log(data);
            },
            error: function (data) {
                alert("error");
                alert(data);
            }
        })
    }
</script>
